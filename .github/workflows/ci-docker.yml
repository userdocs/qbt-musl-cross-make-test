name: ci-docker

on:
  workflow_dispatch:
    inputs:
      skip_rerun:
        description: "Skip rerun?"
        required: true
        default: false
        type: boolean
      retries:
        description: "Number of rerun retries"
        required: true
        default: "1"
        type: choice
        options: ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

env:
  GHCR_REPO: ghcr.io/${{ github.repository }}
  DOCKERHUB_REPO: ${{ github.repository }}

jobs:
  bootstrap-matrix:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
    outputs:
      matrix_includes: ${{ steps.triples.outputs.matrix_includes }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: bootstrap the matrix
        id: triples
        run: echo "matrix_includes=$(jq -c . triples.json)" >> $GITHUB_OUTPUT

  docker-publish:
    needs: [bootstrap-matrix]
    runs-on: ubuntu-24.04-arm
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.bootstrap-matrix.outputs.matrix_includes) }}

    name: docker ${{ matrix.triple_prefix }}-${{ matrix.arch_type }}

    steps:
      # - name: Host - update
      #   run: sudo apt-get update

      # - name: Host - set up qemu-user-static binfmt-support
      #   run: sudo apt install libpipeline1 qemu-user-static binfmt-support

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}
            ${{ env.DOCKERHUB_REPO }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          cache-binary: false

      - name: Build and push by digest
        env:
          DOCKER_BUILD_SUMMARY: "false"
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.docker_platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.GHCR_REPO }}:${{ matrix.arch_type }}
          outputs: type=image,"name=${{ env.GHCR_REPO }}",push-by-digest=true,name-canonical=true,push=true
          no-cache: true
          build-args: |
            TARGET=${{ matrix.triple_prefix }}-${{ matrix.arch_type }}
            BASE_URL=https://github.com/userdocs/qbt-musl-cross-make/releases/latest/download

      # Export digest
      - name: Export digest
        env:
          digest: ${{ steps.push.outputs.digest }}
          triple_prefix: ${{ matrix.triple_prefix }}
          arch_type: ${{ matrix.arch_type }}
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${digest}"
          touch "${{ runner.temp }}/digests/${triple_prefix}-${arch_type}_${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.triple_prefix }}-${{ matrix.arch_type }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error

      # - name: Attest
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.GHCR_REPO }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

  docker-merge:
    needs: [docker-publish]
    runs-on: ubuntu-24.04-arm
    permissions:
      packages: write
      contents: read

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          cache-binary: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # # Create and push manifest lists for ${{ env.SET_IMAGE_TAG }} tag
      # - name: Create manifest list and push ${{ env.SET_IMAGE_TAG }}
      #   working-directory: /tmp/digests
      #   run: |
      #     ghcr_digests=()

      #     for files in tmp/*; do
      #       filename="$(basename "$files")"
      #       triple="${filename%_*}"
      #       if [[ "${triple}" =~ ^x86_64- ]]; then
      #         triple="${triple#x86_64-}"
      #       elif [[ "${triple}" =~ ^aarch64- ]]; then
      #         triple="${triple#aarch64-}"
      #       fi
      #       sha="${filename##*_}"

      #       docker buildx imagetools create -t ${GHCR_REPO}:${triple} ${GHCR_REPO}@sha256:${sha}
      #       docker buildx imagetools inspect ${GHCR_REPO}:${triple}
      #     done

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}

  ci-auto-rerun-failed-jobs:
    if: failure() && (github.event.inputs.skip_rerun || 'false') == 'false'
    needs: [docker-publish]
    concurrency:
      group: ci-auto-rerun-failed-jobs
      cancel-in-progress: true
    permissions:
      actions: write
    runs-on: ubuntu-24.04-arm
    env:
      GH_TOKEN: "${{ secrets.AUTO_RERUN || github.token }}"
      github_repo: "" # To use ci-auto-rerun-failed-jobs.yml hosted in a remote repository else default to the current repository. Requires PAT token AUTO_RERUN
      retries: ${{ github.event.inputs.retries || '1' }}
      distinct_id: ${{ github.event.inputs.distinct_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: ci-auto-rerun-failed-jobs via ${{ env.github_repo || github.repository }}
        run: >
          gh workflow run ci-auto-rerun-failed-jobs-action.yml
          --repo "${github_repo:-$GITHUB_REPOSITORY}"
          -f github_repo=${GITHUB_REPOSITORY}
          -f run_id=${GITHUB_RUN_ID}
          -f attempts=${GITHUB_RUN_ATTEMPT}
          -f retries=${retries}
          -f distinct_id=${distinct_id}
