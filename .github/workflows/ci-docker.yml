name: ci-docker

on:
  workflow_dispatch:

env:
  REGISTRY_IMAGE_GHCR: ghcr.io/${{ github.repository }}
  REGISTRY_IMAGE_DOCKERHUB: ${{ github.repository }}
  SET_IMAGE_TAG: latest

jobs:
  bootstrap-matrix:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
    outputs:
      matrix_includes: ${{ steps.triples.outputs.matrix_includes }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: bootstrap the matrix
        id: triples
        run: echo "matrix_includes=$(jq -c . triples.json)" >> $GITHUB_OUTPUT

  docker-publish:
    needs: [bootstrap-matrix]
    runs-on: ubuntu-24.04-arm
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.bootstrap-matrix.outputs.matrix_includes) }}

    name: docker ${{ matrix.triple_prefix }}-${{ matrix.arch_type }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Generate Docker metadata
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE_GHCR }}
            ${{ env.REGISTRY_IMAGE_DOCKERHUB }}

      # Set up QEMU for multiarch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          cache-binary: false

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # Build and push Docker images
      - name: Build and push by digest
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.docker_platform }}
          push: true
          tags: ${{ env.REGISTRY_IMAGE_GHCR }}:${{ matrix.arch_type }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true
          build-args: |
            TARGET=${{ matrix.triple_prefix }}-${{ matrix.arch_type }}
            BASE_URL=https://github.com/userdocs/qbt-musl-cross-make/releases/latest/download

      # Export digest
      - name: Export digest
        env:
          digest: ${{ steps.push.outputs.digest }}
        run: |
          mkdir -p /tmp/digests
          digest="${digest}"
          touch "/tmp/digests/${digest#sha256:}"

      # Upload digest
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-linux-${{ matrix.triple_prefix }}-${{ matrix.arch_type }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY_IMAGE_GHCR }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  docker-merge:
    needs: [docker-publish]
    runs-on: ubuntu-24.04-arm
    permissions:
      packages: write
      contents: read

    env:
      registry: ${{ env.REGISTRY_IMAGE_GHCR }}
    steps:
      # Download digests
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          cache-binary: false

      # Generate Docker metadata
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE_GHCR }}

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # Create and push manifest lists for ${{ env.SET_IMAGE_TAG }} tag
      - name: Create manifest list and push ${{ env.SET_IMAGE_TAG }}
        working-directory: /tmp/digests
        run: |
          ghcr_digests=$(for digest in *; do printf '%s@sha256:%s ' "${registry}" "$digest"; done)
          docker buildx imagetools create -t ${registry} $ghcr_digests

      # Inspect images
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${registry}/${{ matrix.arch_type }}:${{ env.SET_IMAGE_TAG }}
